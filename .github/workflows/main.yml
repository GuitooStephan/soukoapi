# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    container: python:3.6.8

    environment: staging_environment

    services:
      db:
        image: postgres:latest
        ports:
          # Opens tcp port 6379 on the host and service container
          - 5432
        env:
          POSTGRES_PASSWORD: souko
          POSTGRES_USER: souko
          POSTGRES_DB: souko

    env:
      DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
      EMAIL_BASE_URL: ${{ secrets.EMAIL_BASE_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      TEMPLATE_EMAIL_WITH_URL_ID: ${{ secrets.TEMPLATE_EMAIL_WITH_URL_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Test
        run: |
          python manage.py migrate --no-input
          python manage.py test main.tests

  # deploy:
  #   needs: test
  #   if: ${{ github.ref == 'refs/heads/master' }}
  #   environment: staging_environment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: akhileshns/heroku-deploy@v3.8.8 # This is the action
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: "souko-api"
  #         heroku_email: "guystephane00@gmail.com"
  #         branch: "master"
